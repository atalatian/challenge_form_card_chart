{"version":3,"sources":["components/form/validation/textInputValidation.js","services/createNewState.js","components/form/validation/massages.js","components/form/textInput.jsx","services/getById.js","services/removeDuplicate.js","services/filterById.js","components/form/multipleSelect.jsx","components/form/validation/multipleSelectValidation.js","services/createStates.js","components/form/form.jsx","components/users/card.jsx","components/users/users.jsx","services/filterBySkill.js","services/countSkills.js","components/chart/chart.jsx","components/navbar.js","App.js","reportWebVitals.js","services/getUsersFromLocalStorage.js","services/getIdFromLocalStorage.js","services/replaceUser.js","reducers/usersReducer.js","reducers/skillsReducer.js","reducers/formReducer.js","reducers/index.js","index.js"],"names":["textInputValidation","text","length","error","type","createNewState","state","newState","forMutable","previous","index","constructor","Array","forEach","item","Object","prop","hasOwnProperty","massages","TextInput","props","Box","sx","p","margin","maxWidth","width","TextField","focused","value","states","input","name","submit","inputProps","id","label","onChange","e","newStates","target","setStates","handleTextInputChange","map","massage","Alert","severity","getById","array","filter","removeDuplicate","from","Set","find","filterById","MultipleSelect","React","setValue","FormControl","InputLabel","Select","labelId","options","skill","MenuItem","onClick","skillId","tags","selectedSkills","push","handleTagAddition","selectedSkill","m","display","Paper","alignItems","backgroundColor","borderRadius","Typography","variant","color","gutterBottom","IconButton","href","tagID","handleDeleteTag","fontSize","multipleSelectValidation","createStates","inputs","defaultValue","obj","edit","createTheme","palette","primary","main","Form","dispatch","useDispatch","skills","useSelector","form","useState","isValid","setInputs","useEffect","isSuccessful","valid","newInputs","result","newInput","handleFinish","payload","handleSave","Fragment","elevation","flexDirection","Button","ThemeProvider","theme","del","BasicCard","users","border","setBorder","borders","Card","handleBorder","CardContent","component","user","firstName","lastName","age","CardActions","userId","setBorders","handleEdit","size","Users","Grid","container","spacing","xs","sm","md","lg","filterBySkill","element","pass","countSkills","filteredBySkill","count","Chart","data","setData","mt","ResponsiveContainer","aspect","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","Navbar","flexGrow","AppBar","position","Toolbar","Link","to","App","exact","path","CssBaseline","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getUsersFromLocalStorage","localStorage","getItem","JSON","parse","getIdFromLocalStorage","parseInt","replaceUser","usersReducer","action","setItem","toString","stringify","console","log","skillsReducer","initialState","formReducer","allReducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAceA,EAda,SAACC,GACzB,OAAKA,EAAKC,OAMC,CACHC,OAAO,EACPC,KAAM,IAPH,CACHD,OAAO,EACPC,KAAM,CAAC,W,QC8BJC,EAlCQ,SAACC,GACpB,IAoBIC,EApBEC,EAAa,SAAbA,EAAcF,EAAOG,EAAUC,GACjC,GAAIJ,EAAMK,cAAgBC,MAClBH,IACAA,EAASC,GAAT,YAAsBJ,IAE1BA,EAAMO,SAAQ,SAACC,EAAMJ,GACjBF,EAAWM,EAAMR,EAAOI,WAE1B,GAAIJ,EAAMK,cAAgBI,OAI5B,IAAK,IAAIC,KAHLP,IACAA,EAASC,GAAT,eAAsBJ,IAETA,EACTA,EAAMW,eAAeD,IACrBR,EAAWF,EAAMU,GAAOV,EAAOU,IAO/C,GAAIV,EAAMK,cAAgBC,MAEtBJ,EADAD,EAAQ,YAAOD,GACM,KAAM,UACzB,IAAIA,EAAMK,cAAgBI,OAI5B,OAAOT,EAFPE,EADAD,EAAQ,eAAOD,GACM,KAAM,MAI/B,OAAOC,G,SC3BIW,EAJE,CACb,MAAS,2B,yBCME,SAASC,EAAUC,GAQ9B,OACI,eAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,EAAGH,EAAMI,OAAQC,SAAS,OAASC,MAAM,SAApD,UACI,cAACC,EAAA,EAAD,CACIL,GAAI,CAAEI,MAAM,QACZE,SAAS,EACTC,MAAOT,EAAMU,OAAOV,EAAMW,MAAMC,MAChC7B,MAAOiB,EAAMW,MAAME,OAAO9B,MAC1B+B,WAAY,CAAC9B,KAAK,GAAD,OAAKgB,EAAMW,MAAM3B,OAClC+B,GAAG,oBACHC,MAAK,UAAKhB,EAAMW,MAAMK,OACtBC,SACI,SAACC,GAAD,OAjBc,SAACA,EAAGN,GAC9B,IAAMO,EAAYlC,EAAee,EAAMU,QACvCS,EAAUP,GAAQM,EAAEE,OAAOX,MAC3BT,EAAMqB,UAAUF,GAeAG,CAAsBJ,EAAGlB,EAAMW,MAAMC,SAGjD,8BAEQZ,EAAMW,MAAME,OAAO7B,KAAKuC,KAAI,SAACC,GACzB,OACI,cAACC,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB5B,EAAS0B,a,mEC5B/CG,EANC,SAACC,EAAOb,GACpB,OAAQa,EAAMC,QAAO,SAACpB,GAClB,OAAOA,EAAK,KAAWM,KACxB,ICGQe,EANS,SAACF,GACrB,OAAOpC,MAAMuC,KAAK,IAAIC,IAAIJ,EAAML,KAAI,SAAA7B,GAAI,OAAIA,EAAKqB,QAAMQ,KAAI,SAAAR,GACvD,OAAOa,EAAMK,MAAK,SAAAvC,GAAI,OAAIA,EAAKqB,KAAOA,SCI/BmB,EANI,SAACN,EAAOb,GACvB,OAAOa,EAAMC,QAAO,SAACpB,GACjB,OAAOA,EAAK,KAAWM,M,kBCgBhB,SAASoB,EAAenC,GACnC,MAA0BoC,aAA1B,mBAAO3B,EAAP,KAAc4B,EAAd,KAuBA,OACI,eAACpC,EAAA,EAAD,CAAKC,GAAI,CAAEC,EAAGH,EAAMI,OAAQC,SAAS,OAASC,MAAM,SAApD,UACI,eAACgC,EAAA,EAAD,CAAapC,GAAI,CAAEI,MAAM,QAAzB,UACI,cAACiC,EAAA,EAAD,CAAYxB,GAAG,kCAAf,SAAkDf,EAAMW,MAAMK,QAC9D,cAACwB,EAAA,EAAD,CACIC,QAAQ,kCACR1B,GAAG,4BACHN,MAAOA,EACP1B,MAAOiB,EAAMW,MAAME,OAAO9B,MAC1BiC,MAAOhB,EAAMW,MAAMK,MACnBC,SA/BK,SAACC,GAClBmB,EAASnB,EAAEE,OAAOX,QAwBV,SASQT,EAAM0C,QAAQnB,KAAI,SAACoB,GACf,OAAO,cAACC,EAAA,EAAD,CAAUC,QAAS,kBA/BxB,SAACC,GACvB,IAAIC,EAAI,YAAO/C,EAAMU,OAAOsC,gBAC5BD,EAAKE,KAAKtB,EAAQ3B,EAAM0C,QAASI,IACjCC,EAAOjB,EAAgBiB,GACvB,IAAM5B,EAAYlC,EAAee,EAAMU,QACvCS,EAAU6B,eAAiBD,EAC3B/C,EAAMqB,UAAUF,GAyBkC+B,CAAkBP,EAAM5B,KACtBN,MAAOkC,EAAM5B,GADtC,SAC2C4B,EAAM3B,OAAlC2B,EAAM5B,YAK5C,+BAESf,EAAMU,OAAOsC,gBAAkB,IAAIzB,KAAI,SAAC4B,GACrC,OACI,cAAClD,EAAA,EAAD,CAAKC,GAAI,CAAEkD,EAAG,EAAGC,QAAQ,gBAAzB,SACI,eAACC,EAAA,EAAD,CAAOpD,GAAI,CAAEmD,QAAQ,OAASE,WAAW,SACrCC,gBAAgB,UAAYC,aAAa,QAD7C,UAEI,cAACC,EAAA,EAAD,CAAYxD,GAAI,CAAEC,EAAG,EAAGiD,EAAG,GAAKO,QAAQ,YAAYC,MAAK,OAC7CP,QAAQ,QAAQQ,cAAY,EADxC,SAEKV,EAAcnC,QAEnB,cAAC8C,EAAA,EAAD,CAAYF,MAAM,UACN1D,GAAI,CAAEC,EAAG,IACT,aAAW,aAAa4D,KAAK,IAC7BlB,QAAS,kBA1C7B,SAACmB,GACrB,IAAIjB,EAAI,YAAO/C,EAAMU,OAAOsC,gBAC5BD,EAAOb,EAAWa,EAAMiB,GACxB,IAAM7C,EAAYlC,EAAee,EAAMU,QACvCS,EAAU6B,eAAiBD,EAC3B/C,EAAMqB,UAAUF,GAqCqC8C,CAAgBd,EAAcpC,KAHvD,SAII,cAAC,IAAD,CAAYb,GAAI,CAAEgE,SAAS,OAASN,MAAM,gBAXLT,EAAcpC,SAmB/E,8BAEQf,EAAMW,MAAME,OAAO7B,KAAKuC,KAAI,SAACC,GACzB,OACI,cAACC,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyB5B,EAAS0B,aCzF9D,IAce2C,EAdkB,SAACvC,GAC9B,OAAKA,EAAM9C,OAMA,CACHC,OAAO,EACPC,KAAM,IAPH,CACHD,OAAO,EACPC,KAAM,CAAC,W,gBCKJoF,EATM,SAACC,EAAQC,GAC1B,IAD2C,EACrCC,EAAM,GAD+B,cAEvBF,GAFuB,IAE3C,2BAA2B,CAAC,IAAjB1D,EAAgB,QACvB4D,EAAI5D,EAAMC,MAAQ0D,EAAa3D,EAAMC,OAASD,EAAM2D,cAHb,8BAK3C,OAAOC,G,kBCSLC,EAAOC,YAAY,CACrBC,QAAS,CACLC,QAAS,CACLC,KAAK,cAKF,SAASC,IAEpB,IAAMC,EAAWC,cACXC,EAASC,aAAY,SAAA/F,GAAK,OAAIA,EAAM8F,UACpCE,EAAOD,aAAY,SAAA/F,GAAK,OAAIA,EAAMgG,QAExC,EAA4BC,mBAAS,IAArC,mBAAOzE,EAAP,KAAeW,EAAf,KAEA,EAA4B8D,mBAAS,CACjC,CACIpE,GAAI,EACJuD,aAAc,GACd1D,KAAM,YACNI,MAAO,aACPhC,KAAM,OACN6B,OAAQ,CAAC9B,OAAO,EAAOC,KAAM,IAC7BoG,QAASxG,GAEb,CACImC,GAAI,EACJuD,aAAc,GACd1D,KAAM,WACNI,MAAO,YACPhC,KAAM,OACN6B,OAAQ,CAAC9B,OAAO,EAAOC,KAAM,IAC7BoG,QAASxG,GAEb,CACImC,GAAI,EACJuD,aAAc,GACd1D,KAAM,MACNI,MAAO,MACPhC,KAAM,SACN6B,OAAQ,CAAC9B,OAAO,EAAOC,KAAM,IAC7BoG,QAASxG,GAEb,CACImC,GAAI,EACJuD,aAAc,GACd1D,KAAM,iBACNI,MAAO,SACPhC,KAAM,iBACN6B,OAAQ,CAAC9B,OAAO,EAAOC,KAAM,IAC7BoG,QAASjB,KAnCjB,mBAAOE,EAAP,KAAegB,EAAf,KAuCAC,qBAAU,WACNjE,EAAU+C,EAAaC,EAAQa,EAAKZ,iBACrC,CAACD,EAAQa,IAEZ,IAAMK,EAAe,WACjB,IAAIC,GAAQ,EACNC,EAAYpB,EAAO9C,KAAI,SAACZ,GAC1B,IAAM+E,EAAS/E,EAAMyE,QAAQ1E,EAAOC,EAAMC,OACtC8E,EAAO3G,QACPyG,GAAQ,GAEZ,IAAMG,EAAW1G,EAAe0B,GAEhC,OADAgF,EAAS9E,OAAS6E,EACXC,KAIX,OAFAN,EAAUI,GAEHD,GAiBLI,EAAe,WACjB,GAAIL,IAAe,CACf,IAAMxE,EAAKmE,EAAKZ,aAAavD,GAC7B+D,EAAS,CAAC9F,KAAM,YAAa6G,QAAQ,2BAAKnF,GAAN,IAAcK,SAClD+D,EAAS,CAAC9F,KAAM,gBAIlB8G,EAAa,WACXP,KACAT,EAAS,CAAC9F,KAAM,WAAY6G,QAASnF,KAM7C,OACI,cAAC,IAAMqF,SAAP,UACI,cAAC9F,EAAA,EAAD,CAAKC,GAAI,CAAEI,MAAM,QAAUD,SAAS,OAASF,EAJrC,EAIiDiD,EAAE,QAA3D,SACI,cAACE,EAAA,EAAD,CAAO0C,UAAW,GAAlB,SACI,eAAC/F,EAAA,EAAD,CAAKC,GAAI,CAAEmD,QAAQ,OAAS4C,cAAc,SAAW1C,WAAW,UAAhE,UAEQc,EAAO9C,KAAI,SAACZ,GACR,MAAmB,SAAfA,EAAM3B,MAAkC,WAAf2B,EAAM3B,KAE3B,cAACe,EAAD,CAA0BY,MAAOA,EACtBD,OAAQA,EAAQW,UAAWA,EAAWjB,OAZrE,GAWoCO,EAAMI,IAGL,mBAAfJ,EAAM3B,KAER,cAACmD,EAAD,CAA+BxB,MAAOA,EACtBD,OAAQA,EAAQW,UAAWA,EAC3BjB,OAlBpC,EAkBqDsC,QAASsC,GAFrBrE,EAAMI,IAKxB,QAInB,cAACd,EAAA,EAAD,CAAKC,GAAI,CAAEC,EAzBf,EAyB2BG,MAAM,QAAUD,SAAS,QAAhD,SApDK,WAAjB6E,EAAKvB,QAED,cAACuC,EAAA,EAAD,CAAQvC,QAAQ,YAAYd,QAASiD,EAArC,kBAEmB,SAAjBZ,EAAKvB,QAEP,cAACwC,EAAA,EAAD,CAAeC,MAAO5B,EAAtB,SACI,cAAC0B,EAAA,EAAD,CAAQvC,QAAQ,YAAYd,QAAS+C,EAArC,2BAHN,a,+BChFRpB,EAAOC,YAAY,CACrBC,QAAS,CACLC,QAAS,CACLC,KAAK,cAKXyB,EAAM5B,YAAY,CACpBC,QAAS,CACLC,QAAS,CACLC,KAAK,cAKF,SAAS0B,EAAUtG,GAE9B,IAAM8E,EAAWC,cACXwB,EAAQtB,aAAY,SAAA/F,GAAK,OAAIA,EAAMqH,SACzC,EAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KAMAnB,qBAAU,WACNmB,EAAUzG,EAAMwG,UACjB,CAACxG,EAAM0G,QAAS1G,EAAMwG,SAsBzB,OACI,cAACG,EAAA,EAAD,CAAMX,UAAW,GAAI9F,GAAI,CAAEsG,OAAO,GAAD,OAXhB,WACjB,GAAIA,EACA,OAAIA,EAAOA,OACA,oBAEA,GAMuBI,KAAtC,SACI,eAACC,EAAA,EAAD,WACI,cAACnD,EAAA,EAAD,CAAYC,QAAQ,KAAKmD,UAAU,MAAnC,mBACQ9G,EAAM+G,KAAKC,UADnB,YACgChH,EAAM+G,KAAKE,YAE3C,eAACvD,EAAA,EAAD,CAAYC,QAAQ,YAAYE,cAAY,EAACiD,UAAU,MAAvD,4BACa9G,EAAM+G,KAAKG,QAExB,eAACxD,EAAA,EAAD,CAAYC,QAAQ,YAAYE,cAAY,EAACiD,UAAU,MAAvD,sBAEK9G,EAAM+G,KAAK/D,gBAAkB,IAAIzB,KAAI,SAACoB,GACnC,OACI,cAAC1C,EAAA,EAAD,CAAKC,GAAI,CAAEkD,EAAG,EAAGC,QAAQ,gBAAzB,SACI,cAACC,EAAA,EAAD,CAAOpD,GAAI,CAAEmD,QAAQ,OAASE,WAAW,SACrCC,gBAAgB,UAAYC,aAAa,QAD7C,SAEI,cAACC,EAAA,EAAD,CAAYxD,GAAI,CAAEC,EAAG,EAAGiD,EAAG,GAAKO,QAAQ,YAAYC,MAAK,OAC7CP,QAAQ,QAAQQ,cAAY,EADxC,SAEKlB,EAAM3B,kBAQ/B,eAACmG,EAAA,EAAD,WACI,cAAChB,EAAA,EAAD,CAAeC,MAAO5B,EAAtB,SACI,cAAC0B,EAAA,EAAD,CAAQrD,QAAS,kBAhDlB,SAACuE,GAChB,IAAML,EAAOpF,EAAQ4E,EAAOa,GAC5BtC,EAAS,CAAC9F,KAAM,UAAW6G,QAASkB,IACpC,IAAML,EAAU1G,EAAM0G,QAAQnF,KAAI,SAACiF,GAE/B,OADAA,EAAOA,OAASA,EAAOzF,KAAOqG,EACvBZ,KAEXxG,EAAMqH,WAAWX,GAyCqBY,CAAWtH,EAAM+G,KAAKhG,KACpC4C,QAAS,YAAa4D,KAAK,QADnC,oBAGJ,cAACpB,EAAA,EAAD,CAAeC,MAAOC,EAAtB,SACI,cAACH,EAAA,EAAD,CAAQrD,QAAS,kBA5DfuE,EA4DiCpH,EAAM+G,KAAKhG,QA3D9D+D,EAAS,CAAC9F,KAAM,cAAe6G,QAASuB,IADvB,IAACA,GA6DMzD,QAAS,YAAa4D,KAAK,QADnC,8B,aC1FT,SAASC,IAEpB,IAAMjB,EAAQtB,aAAY,SAAA/F,GAAK,OAAIA,EAAMqH,SACzC,EAA8BpB,mBAAS,IAAvC,mBAAOuB,EAAP,KAAgBW,EAAhB,KASA,OAPA/B,qBAAU,WACN,IAAMoB,EAAUH,EAAMhF,KAAI,SAACwF,GACvB,MAAO,CAAChG,GAAIgG,EAAKhG,GAAIyF,QAAQ,MAEjCa,EAAWX,KACZ,CAACH,IAGA,cAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SAEQpB,EAAMhF,KAAI,SAACwF,GACP,OACI,cAACU,EAAA,EAAD,CAAoB/H,MAAI,EAACkI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAnD,SACI,cAACzB,EAAD,CAAWE,OAAQ7E,EAAQ+E,EAASK,EAAKhG,IAC9B2F,QAASA,EAASW,WAAYA,EAChBN,KAAMA,GAAfA,EAAKhG,KAHdgG,EAAKhG,S,kGCPzBiH,GAhBO,SAACzB,EAAQ5D,GAC3B,OAAO4D,EAAM1E,QAAO,SAACoG,GACjB,IAAIC,GAAO,EASX,OARqBD,EAAQjF,eACdzB,KAAI,SAAC4B,GAIhB,OAHIR,EAAM/B,OAASuC,EAAcvC,OAC7BsH,GAAO,GAEJ,KAGJA,MCDAC,GARK,SAAC5B,EAAOvB,GACxB,OAAOA,EAAOzD,KAAI,SAACoB,GACf,IAAIyF,EAAkBJ,GAAczB,EAAO5D,GAC3C,MAAO,CAAC/B,KAAM+B,EAAM/B,KAAMI,MAAO2B,EAAM3B,MAAOqH,MAAOD,EAAgBtJ,YCI9D,SAASwJ,KAEpB,MAAwBnD,qBAAxB,mBAAOoD,EAAP,KAAaC,EAAb,KACMjC,EAAQtB,aAAY,SAAA/F,GAAK,OAAIA,EAAMqH,SACnCvB,EAASC,aAAY,SAAA/F,GAAK,OAAIA,EAAM8F,UAM1C,OAJAM,qBAAU,WACNkD,EAAQL,GAAY5B,EAAOvB,MAC5B,CAACuB,EAAOvB,IAGP,cAAC/E,EAAA,EAAD,CAAKC,GAAI,CAAEI,MAAO,IAAK8C,EAAE,OAASqF,GAAI,EAAGpI,SAAS,QAAlD,SACI,cAACiD,EAAA,EAAD,CAAOpD,GAAI,CAAEC,EAAG,GAAK6F,UAAW,GAAhC,SACI,cAAC0C,EAAA,EAAD,CAAqBpI,MAAK,OAAUqI,OAAQ,IAA5C,SACI,eAACC,EAAA,EAAD,CAAUL,KAAMA,EAAhB,UACI,cAACM,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAKJ,QAAQ,QAAQK,KAAK,qB,kCCtBnC,SAASC,KACpB,OACI,cAACrJ,EAAA,EAAD,CAAKC,GAAI,CAAEqJ,SAAU,GAArB,SACI,cAACC,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,GAAA,EAAD,WACI,cAACxD,EAAA,EAAD,CAAQY,UAAW6C,IAAMC,GAAE,IAAOhG,MAAM,UAAxC,kBACA,cAACsC,EAAA,EAAD,CAAQY,UAAW6C,IAAMC,GAAE,SAAYhG,MAAM,UAA7C,0BCkCLiG,OAjCf,WAQI,OANAvE,qBAAU,cAGP,IAIC,cAAC,IAAD,UACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,IAAlB,UACI,cAACC,EAAA,EAAD,IACA,cAACV,GAAD,IACA,eAACW,GAAA,EAAD,CAAW5J,SAAS,KAApB,UACI,cAACwE,EAAD,IACA,cAAC5E,EAAA,EAAD,CAAKC,GAAI,CAAEC,EAAG,GAAd,eACA,cAACqH,EAAD,UAGR,eAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,SAAlB,UACI,cAACC,EAAA,EAAD,IACA,cAACV,GAAD,IACA,cAACW,GAAA,EAAD,CAAW5J,SAAS,KAApB,SACI,cAACiI,GAAD,eC1BT4B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,UCECQ,GATkB,WAC7B,IAAMpE,EAAQqE,aAAaC,QAAQ,SACnC,OAAItE,EACOuE,KAAKC,MAAMxE,GAEX,ICIAyE,GATe,WAC1B,IAAIjK,EAAK6J,aAAaC,QAAQ,MAC9B,OAAI9J,EACOkK,SAASlK,GAAK,EAEd,GCKAmK,GAVK,SAAC3E,EAAOQ,GACxB,OAAOR,EAAMhF,KAAI,SAAC7B,GACd,OAAIA,EAAKqB,KAAOgG,EAAKhG,GACVgG,EAEArH,MCyBJyL,GAxBM,WAAiD,IAAhDjM,EAA+C,uDAAvCyL,KAA4BS,EAAW,uCACjE,GAAoB,aAAhBA,EAAOpM,KAAoB,CAC3B,IAAMG,EAAWF,EAAeC,GAC1B6H,EAAI,2BAAOqE,EAAOvF,SAAd,IAAuB9E,GAAIiK,OAIrC,OAHAJ,aAAaS,QAAQ,KAAML,KAAwBM,YACnDnM,EAAS8D,KAAK8D,GACd6D,aAAaS,QAAQ,QAASP,KAAKS,UAAUpM,IACtCA,EACL,GAAoB,gBAAhBiM,EAAOpM,KAAuB,CACpCwM,QAAQC,IAAIvM,GACZ,IAAIC,EAAWF,EAAeC,GAG9B,OAFAC,EAAW+C,EAAW/C,EAAUiM,EAAOvF,SACvC+E,aAAaS,QAAQ,QAASP,KAAKS,UAAUpM,IACtCA,EACL,GAAmB,cAAhBiM,EAAOpM,KAAqB,CACjC,IAAIG,EAAWF,EAAeC,GAG9B,OAFAC,EAAW+L,GAAY/L,EAAUiM,EAAOvF,SACxC+E,aAAaS,QAAQ,QAASP,KAAKS,UAAUpM,IACtCA,EAEP,OAAOD,GC1BT8F,GAAS,CACX,CAACjE,GAAI,EAAGH,KAAM,OAAQI,MAAO,QAC7B,CAACD,GAAI,EAAGH,KAAM,MAAOI,MAAO,OAC5B,CAACD,GAAI,EAAGH,KAAM,aAAcI,MAAO,eAQxB0K,GALO,WAA6B,IAA5BxM,EAA2B,uDAAnB8F,GAC3B,OAAO9F,GCLLyM,GAAe,CACjBhI,QAAS,SACTW,aAAc,IAmBHsH,GAhBK,WAAmC,IAAlC1M,EAAiC,uDAAzByM,GAAcP,EAAW,uCAClD,GAAoB,cAAhBA,EAAOpM,KAAsB,CAC7B,IAAMG,EAAWF,EAAeC,GAGhC,OAFAC,EAASwE,QAAU,SACnBxE,EAASmF,aAAe,GACjBnF,EACL,GAAoB,YAAhBiM,EAAOpM,KAAmB,CAChC,IAAMG,EAAWF,EAAeC,GAGhC,OAFAC,EAASwE,QAAU,OACnBxE,EAASmF,aAAe8G,EAAOvF,QACxB1G,EAEP,OAAOD,GCRA2M,GANKC,aAAgB,CAChCvF,MAAO4E,GACPnG,OAAQ0G,GACRxG,KAAM0G,KCCJG,GAAQC,aAAYH,IAE1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRK,SAASC,eAAe,SAM1BnC,O","file":"static/js/main.47cfa799.chunk.js","sourcesContent":["const textInputValidation = (text) => {\r\n    if (!text.length){\r\n        return {\r\n            error: true,\r\n            type: ['EMPTY'],\r\n        }\r\n    }else {\r\n        return {\r\n            error: false,\r\n            type: [],\r\n        }\r\n    }\r\n}\r\n\r\nexport default textInputValidation;","const createNewState = (state) =>{\r\n    const forMutable = (state, previous, index) => {\r\n        if (state.constructor === Array){\r\n            if (previous){\r\n                previous[index] = [...state];\r\n            }\r\n            state.forEach((item, index)=>{\r\n                forMutable(item, state, index);\r\n            })\r\n        }else if (state.constructor === Object){\r\n            if (previous){\r\n                previous[index] = {...state}\r\n            }\r\n            for (let prop in state){\r\n                if (state.hasOwnProperty(prop)){\r\n                    forMutable(state[prop], state, prop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let newState\r\n    if (state.constructor === Array){\r\n        newState = [...state];\r\n        forMutable(newState, null, null);\r\n    }else if (state.constructor === Object){\r\n        newState = {...state};\r\n        forMutable(newState, null, null);\r\n    }else {\r\n        return state;\r\n    }\r\n    return newState;\r\n}\r\n\r\nexport default createNewState;","const massages = {\r\n    'EMPTY': 'This input is required!',\r\n}\r\n\r\nexport default massages;","import TextField from \"@mui/material/TextField\";\r\nimport React from \"react\";\r\nimport massages from \"./validation/massages\";\r\nimport createNewState from \"../../services/createNewState\";\r\nimport Box from '@mui/material/Box';\r\nimport {Alert} from \"@mui/material\";\r\n\r\nexport default function TextInput(props){\r\n\r\n    const handleTextInputChange = (e, name) => {\r\n        const newStates = createNewState(props.states);\r\n        newStates[name] = e.target.value;\r\n        props.setStates(newStates);\r\n    }\r\n\r\n    return(\r\n        <Box sx={{ p: props.margin, maxWidth: `100%`, width: `20rem` }}>\r\n            <TextField\r\n                sx={{ width: `100%` }}\r\n                focused={true}\r\n                value={props.states[props.input.name]}\r\n                error={props.input.submit.error}\r\n                inputProps={{type: `${props.input.type}`}}\r\n                id=\"outlined-required\"\r\n                label={`${props.input.label}`}\r\n                onChange={\r\n                    (e)=>\r\n                        handleTextInputChange(e, props.input.name)\r\n                }\r\n            />\r\n            <div>\r\n                {\r\n                    props.input.submit.type.map((massage)=>{\r\n                        return(\r\n                            <Alert severity=\"error\">{massages[massage]}</Alert>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </Box>\r\n    );\r\n}","const getById = (array, id) => {\r\n    return  array.filter((value) => {\r\n        return value['id'] === id;\r\n    })[0];\r\n}\r\n\r\nexport default getById;","const removeDuplicate = (array) => {\r\n    return Array.from(new Set(array.map(item => item.id))).map(id =>{\r\n        return array.find(item => item.id === id);\r\n    })\r\n}\r\n\r\nexport default removeDuplicate;","const filterById = (array, id) => {\r\n    return array.filter((value) => {\r\n        return value['id'] !== id;\r\n    });\r\n}\r\n\r\nexport default filterById;","import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport Paper from '@mui/material/Paper';\r\nimport getById from \"../../services/getById\";\r\nimport removeDuplicate from \"../../services/removeDuplicate\";\r\nimport createNewState from \"../../services/createNewState\";\r\nimport massages from \"./validation/massages\";\r\nimport filterById from \"../../services/filterById\";\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {Alert} from \"@mui/material\";\r\n\r\n\r\nexport default function MultipleSelect(props) {\r\n    const [value, setValue] = React.useState();\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const handleTagAddition = (skillId) => {\r\n        let tags = [...props.states.selectedSkills]\r\n        tags.push(getById(props.options, skillId));\r\n        tags = removeDuplicate(tags);\r\n        const newStates = createNewState(props.states);\r\n        newStates.selectedSkills = tags;\r\n        props.setStates(newStates);\r\n    }\r\n\r\n    const handleDeleteTag = (tagID) => {\r\n        let tags = [...props.states.selectedSkills]\r\n        tags = filterById(tags, tagID);\r\n        const newStates = createNewState(props.states);\r\n        newStates.selectedSkills = tags;\r\n        props.setStates(newStates);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: props.margin, maxWidth: `100%`, width: `20rem` }}>\r\n            <FormControl sx={{ width: `100%`, }}>\r\n                <InputLabel id=\"demo-simple-select-helper-label\">{props.input.label}</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    value={value}\r\n                    error={props.input.submit.error}\r\n                    label={props.input.label}\r\n                    onChange={handleChange}\r\n                >\r\n                    {\r\n                        props.options.map((skill)=>{\r\n                            return(<MenuItem onClick={()=>handleTagAddition(skill.id)}\r\n                                             key={skill.id} value={skill.id}>{skill.label}</MenuItem>);\r\n                        })\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n            <div>\r\n                {\r\n                    (props.states.selectedSkills || []).map((selectedSkill)=>{\r\n                        return(\r\n                            <Box sx={{ m: 1, display: `inline-block` }} key={selectedSkill.id}>\r\n                                <Paper sx={{ display: `flex`, alignItems: `center`,\r\n                                    backgroundColor: `#1565c0`, borderRadius: `24px`}}>\r\n                                    <Typography sx={{ p: 1, m: 0 }} variant=\"subtitle2\" color={`#fff`}\r\n                                                display=\"block\" gutterBottom>\r\n                                        {selectedSkill.label}\r\n                                    </Typography>\r\n                                    <IconButton color=\"primary\"\r\n                                                sx={{ p: 0.5 }}\r\n                                                aria-label=\"Delete Tag\" href=\"#\"\r\n                                                onClick={()=>handleDeleteTag(selectedSkill.id)}>\r\n                                        <CancelIcon sx={{ fontSize: `1rem`, color: `#fff` }}/>\r\n                                    </IconButton>\r\n                                </Paper>\r\n                            </Box>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    props.input.submit.type.map((massage)=>{\r\n                        return(\r\n                            <Alert severity=\"error\">{massages[massage]}</Alert>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n\r\n","const multipleSelectValidation = (array) => {\r\n    if (!array.length){\r\n        return {\r\n            error: true,\r\n            type: ['EMPTY'],\r\n        }\r\n    }else {\r\n        return {\r\n            error: false,\r\n            type: [],\r\n        }\r\n    }\r\n}\r\n\r\nexport default multipleSelectValidation;","const createStates = (inputs, defaultValue) => {\r\n    const obj = {}\r\n    for (const input of inputs){\r\n        obj[input.name] = defaultValue[input.name] || input.defaultValue;\r\n    }\r\n    return obj;\r\n}\r\n\r\n\r\nexport default createStates;","import React, {useState, useEffect} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport textInputValidation from \"./validation/textInputValidation\";\r\nimport createNewState from \"../../services/createNewState\";\r\nimport TextInput from \"./textInput\";\r\nimport MultipleSelect from \"./multipleSelect\";\r\nimport multipleSelectValidation from \"./validation/multipleSelectValidation\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport createStates from \"../../services/createStates\";\r\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\r\n\r\n\r\nconst edit = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: `#f0ad4e`,\r\n        }\r\n    }\r\n});\r\n\r\nexport default function Form() {\r\n\r\n    const dispatch = useDispatch()\r\n    const skills = useSelector(state => state.skills);\r\n    const form = useSelector(state => state.form);\r\n\r\n    const [states, setStates] = useState({});\r\n\r\n    const [inputs, setInputs] = useState([\r\n        {\r\n            id: 0,\r\n            defaultValue: '',\r\n            name: 'firstName',\r\n            label: 'First Name',\r\n            type: 'text',\r\n            submit: {error: false, type: []},\r\n            isValid: textInputValidation,\r\n        },\r\n        {\r\n            id: 1,\r\n            defaultValue: '',\r\n            name: 'lastName',\r\n            label: 'Last Name',\r\n            type: 'text',\r\n            submit: {error: false, type: []},\r\n            isValid: textInputValidation,\r\n        },\r\n        {\r\n            id: 2,\r\n            defaultValue: '',\r\n            name: 'age',\r\n            label: 'Age',\r\n            type: 'number',\r\n            submit: {error: false, type: []},\r\n            isValid: textInputValidation,\r\n        },\r\n        {\r\n            id: 3,\r\n            defaultValue: [],\r\n            name: 'selectedSkills',\r\n            label: 'Skills',\r\n            type: 'multipleSelect',\r\n            submit: {error: false, type: []},\r\n            isValid: multipleSelectValidation,\r\n        },\r\n    ])\r\n\r\n    useEffect(()=>{\r\n        setStates(createStates(inputs, form.defaultValue));\r\n    }, [inputs, form])\r\n\r\n    const isSuccessful = () => {\r\n        let valid = true;\r\n        const newInputs = inputs.map((input, )=>{\r\n            const result = input.isValid(states[input.name]);\r\n            if (result.error){\r\n                valid = false;\r\n            }\r\n            const newInput = createNewState(input);\r\n            newInput.submit = result;\r\n            return newInput;\r\n        });\r\n        setInputs(newInputs);\r\n\r\n        return valid;\r\n    }\r\n\r\n    const renderButtons = () => {\r\n        if (form.variant === 'create'){\r\n            return(\r\n                <Button variant=\"contained\" onClick={handleSave}>Save</Button>\r\n            );\r\n        }else if (form.variant === 'edit'){\r\n            return (\r\n                <ThemeProvider theme={edit}>\r\n                    <Button variant=\"contained\" onClick={handleFinish}>Finish</Button>\r\n                </ThemeProvider>\r\n            );\r\n        }\r\n    }\r\n\r\n    const handleFinish = () => {\r\n        if (isSuccessful()){\r\n            const id = form.defaultValue.id\r\n            dispatch({type: 'EDIT_USER', payload: {...states, id}})\r\n            dispatch({type: 'GO_CREATE'})\r\n        }\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (isSuccessful()){\r\n            dispatch({type: 'ADD_USER', payload: states})\r\n        }\r\n    }\r\n\r\n    const padding = 2;\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Box sx={{ width: `21rem`, maxWidth: `100%`, p: padding, m: `auto`}}>\r\n                <Paper elevation={10}>\r\n                    <Box sx={{ display: `flex`, flexDirection: `column`, alignItems: `center` }}>\r\n                        {\r\n                            inputs.map((input)=>{\r\n                                if (input.type === 'text' || input.type === 'number'){\r\n                                    return(\r\n                                        <TextInput key={input.id} input={input}\r\n                                                   states={states} setStates={setStates} margin={padding}/>\r\n                                    )\r\n                                }else if (input.type === 'multipleSelect'){\r\n                                    return(\r\n                                        <MultipleSelect key={input.id} input={input}\r\n                                                        states={states} setStates={setStates}\r\n                                                        margin={padding} options={skills}/>\r\n                                    )\r\n                                }else {\r\n                                    return null;\r\n                                }\r\n                            })\r\n                        }\r\n                        <Box sx={{ p: padding, width: `20rem`, maxWidth: `100%` }}>\r\n                            {renderButtons()}\r\n                        </Box>\r\n                    </Box>\r\n                </Paper>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport getById from \"../../services/getById\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\n\r\nconst edit = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: `#f0ad4e`,\r\n        }\r\n    }\r\n});\r\n\r\nconst del = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: `#d9534f`,\r\n        }\r\n    }\r\n});\r\n\r\nexport default function BasicCard(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.users);\r\n    const [border, setBorder] = useState({});\r\n\r\n    const handleDelete = (userId) => {\r\n        dispatch({type: 'DELETE_USER', payload: userId})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setBorder(props.border);\r\n    }, [props.borders, props.border])\r\n\r\n    const handleEdit = (userId) => {\r\n        const user = getById(users, userId);\r\n        dispatch({type: 'GO_EDIT', payload: user});\r\n        const borders = props.borders.map((border)=>{\r\n            border.border = border.id === userId;\r\n            return border;\r\n        });\r\n        props.setBorders(borders);\r\n    }\r\n\r\n    const handleBorder = () => {\r\n        if (border){\r\n            if (border.border){\r\n                return '5px #f0ad4e solid'\r\n            }else {\r\n                return ''\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card elevation={10} sx={{ border: `${handleBorder()}` }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                    {`${props.user.firstName} ${props.user.lastName}`}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n                    Age: {`${props.user.age}`}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n                    Skills: {\r\n                    (props.user.selectedSkills || []).map((skill)=>{\r\n                        return(\r\n                            <Box sx={{ m: 1, display: `inline-block` }}>\r\n                                <Paper sx={{ display: `flex`, alignItems: `center`,\r\n                                    backgroundColor: `#1565c0`, borderRadius: `24px`}}>\r\n                                    <Typography sx={{ p: 1, m: 0 }} variant=\"subtitle2\" color={`#fff`}\r\n                                                display=\"block\" gutterBottom>\r\n                                        {skill.label}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Box>\r\n                        );\r\n                    })\r\n                }\r\n                </Typography>\r\n                <CardActions>\r\n                    <ThemeProvider theme={edit}>\r\n                        <Button onClick={()=> handleEdit(props.user.id)}\r\n                                variant={'contained'} size=\"small\">Edit</Button>\r\n                    </ThemeProvider>\r\n                    <ThemeProvider theme={del}>\r\n                        <Button onClick={()=> handleDelete(props.user.id)}\r\n                                variant={'contained'} size=\"small\">Delete</Button>\r\n                    </ThemeProvider>\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","import BasicCard from \"./card\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { useSelector } from 'react-redux'\r\nimport {Grid} from \"@mui/material\";\r\nimport getById from \"../../services/getById\";\r\n\r\nexport default function Users() {\r\n\r\n    const users = useSelector(state => state.users);\r\n    const [borders, setBorders] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const borders = users.map((user)=>{\r\n            return {id: user.id, border: false};\r\n        })\r\n        setBorders(borders);\r\n    }, [users])\r\n\r\n    return(\r\n        <Grid container spacing={2}>\r\n            {\r\n                users.map((user)=>{\r\n                    return(\r\n                        <Grid key={user.id} item xs={12} sm={6} md={4} lg={3}>\r\n                            <BasicCard border={getById(borders, user.id)}\r\n                                       borders={borders} setBorders={setBorders}\r\n                                       key={user.id} user={user}/>\r\n                        </Grid>\r\n                    );\r\n                })\r\n            }\r\n        </Grid>\r\n    );\r\n}","const filterBySkill = (users , skill) => {\r\n    return users.filter((element)=>{\r\n        let pass = false;\r\n        let selectedSkills = element.selectedSkills;\r\n        selectedSkills.map((selectedSkill)=>{\r\n            if (skill.name === selectedSkill.name){\r\n                pass = true;\r\n            }\r\n            return 0;\r\n        })\r\n\r\n        return pass;\r\n    })\r\n\r\n}\r\n\r\nexport default filterBySkill;","import filterBySkill from \"./filterBySkill\";\r\n\r\nconst countSkills = (users, skills) => {\r\n    return skills.map((skill)=>{\r\n        let filteredBySkill = filterBySkill(users, skill);\r\n        return {name: skill.name, label: skill.label, count: filteredBySkill.length};\r\n    })\r\n}\r\n\r\n\r\nexport default countSkills;","import {BarChart, CartesianGrid, XAxis, YAxis,\r\n    Tooltip, Legend, Bar, ResponsiveContainer}\r\n    from \"recharts\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useSelector } from 'react-redux';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport countSkills from \"../../services/countSkills\";\r\n\r\nexport default function Chart(){\r\n\r\n    const [data, setData] = useState();\r\n    const users = useSelector(state => state.users);\r\n    const skills = useSelector(state => state.skills);\r\n\r\n    useEffect(()=>{\r\n        setData(countSkills(users, skills));\r\n    }, [users, skills])\r\n\r\n    return(\r\n        <Box sx={{ width: 600, m: `auto`, mt: 2, maxWidth: `100%`}}>\r\n            <Paper sx={{ p: 3 }} elevation={10}>\r\n                <ResponsiveContainer width={`100%`} aspect={1.2}>\r\n                    <BarChart data={data}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"count\" fill=\"#82ca9d\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Button component={Link} to={`/`} color=\"inherit\">Main</Button>\r\n                    <Button component={Link} to={`/chart`} color=\"inherit\">Chart</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}\r\n","import CssBaseline from '@mui/material/CssBaseline';\r\nimport Form from \"./components/form/form\";\r\nimport Users from \"./components/users/users\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport Chart from \"./components/chart/chart\";\r\nimport Container from '@mui/material/Container';\r\nimport Box from \"@mui/material/Box\";\r\nimport Navbar from \"./components/navbar\";\r\nimport {useEffect} from \"react\";\r\n\r\nfunction App() {\r\n\r\n    useEffect(()=>{\r\n        //localStorage.removeItem('users');\r\n        //localStorage.removeItem('id');\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <CssBaseline/>\r\n                    <Navbar/>\r\n                    <Container maxWidth='lg'>\r\n                        <Form/>\r\n                        <Box sx={{ p: 2 }}> </Box>\r\n                        <Users/>\r\n                    </Container>\r\n                </Route>\r\n                <Route exact path=\"/chart\">\r\n                    <CssBaseline/>\r\n                    <Navbar/>\r\n                    <Container maxWidth='lg'>\r\n                        <Chart/>\r\n                    </Container>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const getUsersFromLocalStorage = () => {\r\n    const users = localStorage.getItem('users');\r\n    if (users){\r\n        return JSON.parse(users);\r\n    }else {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport default getUsersFromLocalStorage;","const getIdFromLocalStorage = () => {\r\n    let id = localStorage.getItem('id');\r\n    if (id){\r\n        return parseInt(id)+ 1;\r\n    }else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport default getIdFromLocalStorage;","const replaceUser = (users, user) => {\r\n    return users.map((item)=>{\r\n        if (item.id === user.id){\r\n            return user;\r\n        }else {\r\n            return item;\r\n        }\r\n    })\r\n}\r\n\r\nexport default replaceUser;","import getUsersFromLocalStorage from \"../services/getUsersFromLocalStorage\";\r\nimport createNewState from \"../services/createNewState\";\r\nimport filterById from \"../services/filterById\";\r\nimport getIdFromLocalStorage from \"../services/getIdFromLocalStorage\";\r\nimport replaceUser from \"../services/replaceUser\";\r\n\r\nconst usersReducer = (state = getUsersFromLocalStorage(), action) => {\r\n    if (action.type === 'ADD_USER'){\r\n        const newState = createNewState(state);\r\n        const user = {...action.payload, id: getIdFromLocalStorage()};\r\n        localStorage.setItem('id', getIdFromLocalStorage().toString());\r\n        newState.push(user);\r\n        localStorage.setItem('users', JSON.stringify(newState));\r\n        return newState;\r\n    }else if (action.type === 'DELETE_USER'){\r\n        console.log(state);\r\n        let newState = createNewState(state);\r\n        newState = filterById(newState, action.payload);\r\n        localStorage.setItem('users', JSON.stringify(newState));\r\n        return newState\r\n    }else if(action.type === 'EDIT_USER'){\r\n        let newState = createNewState(state);\r\n        newState = replaceUser(newState, action.payload);\r\n        localStorage.setItem('users', JSON.stringify(newState));\r\n        return newState;\r\n    }else {\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;","const skills = [\r\n    {id: 0, name: 'html', label: 'HTML'},\r\n    {id: 1, name: 'css', label: 'CSS'},\r\n    {id: 2, name: 'javascript', label: 'Javascript'},\r\n]\r\n\r\nconst skillsReducer = (state = skills, action) => {\r\n    return state;\r\n}\r\n\r\n\r\nexport default skillsReducer;","import createNewState from \"../services/createNewState\";\r\n\r\nconst initialState = {\r\n    variant: 'create',\r\n    defaultValue: {},\r\n}\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n    if (action.type === 'GO_CREATE') {\r\n        const newState = createNewState(state);\r\n        newState.variant = 'create';\r\n        newState.defaultValue = {};\r\n        return newState;\r\n    }else if (action.type === 'GO_EDIT'){\r\n        const newState = createNewState(state);\r\n        newState.variant = 'edit';\r\n        newState.defaultValue = action.payload;\r\n        return newState;\r\n    }else {\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default formReducer;","import usersReducer from \"./usersReducer\";\r\nimport {combineReducers} from \"redux\";\r\nimport skillsReducer from \"./skillsReducer\";\r\nimport formReducer from \"./formReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n    users: usersReducer,\r\n    skills: skillsReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport allReducers from \"./reducers\";\r\n\r\nconst store = createStore(allReducers);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}